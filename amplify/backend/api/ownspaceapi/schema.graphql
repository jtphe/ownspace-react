type User @model {
  id: ID!
  identityId: String!
  createdAt: String
  updatedAt: String
  firstname: String
  lastname: String
  email: String!
  password: String!
  pictureName: String
  pictureUrl: String
  notification: Boolean
  role: String!
  group: ID
  limitedStorage: Boolean
  storageSpaceUsed: Float
  totalStorageSpace: Float
}

type Group @model {
  id: ID!
  name: String
}

type File @model {
  id: ID!
  createdAt: String
  updatedAt: String
  name: String!
  content: String
  owner: ID!
  isProtected: Boolean
  password: String
  parent: ID!
  size: Float
  mimeType: String
  type: String
}

type Folder @model {
  id: ID!
  createdAt: String
  updatedAt: String
  name: String
  owner: ID!
  isProtected: Boolean
  password: String
  parent: ID!
  nbFiles: Int
}

type Right @model {
  id: ID!
  createdAt: String
  updatedAt: String
  read: Boolean!
  edit: Boolean!
  document: ID!
  user: ID!
  firstname: String
  lastname: String
  email: String
  type: String!
}

type App @model {
  groupId: ID!
  subscription: String!
  pack: Int!
  custom: Boolean
  headerColor: String
  iconeUrl: String
  font: String
}