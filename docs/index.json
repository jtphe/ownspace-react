[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/api/index.js",
    "content": "import document from '@backend/api/ownspaceapi/resolvers/document';\nimport user from '@backend/api/ownspaceapi/resolvers/user';\nimport { Auth } from 'aws-amplify';\n\n/**\n * Api object that return all the promises\n */\nconst api = {\n  // DOCUMENT\n  /**\n   * Create a file in txt format\n   * @param {object} payload - Name and content of the file\n   */\n  createFileTxt(payload) {\n    return Promise.resolve(\n      document.Mutation.createFileTxt({\n        name: payload.name,\n        content: payload.content,\n        owner: payload.owner\n      })\n    );\n  },\n\n  // USER\n  /**\n   * Create the user object when the user log for the first time\n   * @param {object} payload - Id, email, password and role of the user\n   */\n  createUser(payload) {\n    return Promise.resolve(\n      user.Mutation.createUser({\n        id: payload.id,\n        email: payload.email,\n        password: payload.password,\n        role: payload.role\n      })\n    );\n  },\n  /**\n   * Get the user\n   * @param {Object} payload - Id of the user\n   */\n  loadUser(payload) {\n    return Promise.resolve(\n      user.Query.getUser({\n        id: payload.userId\n      })\n    );\n  },\n  /**\n   * Update the user firstname and lastname\n   * @param {Object} payload - Id, firstname and lastname of the user\n   */\n  updateUserNames(payload) {\n    return Promise.resolve(\n      user.Mutation.updateUserNames({\n        id: payload.id,\n        firstname: payload.firstname,\n        lastname: payload.lastname\n      })\n    );\n  },\n  /**\n   * Update the user password\n   * @param {object} payload - Id and password of the user\n   */\n  updateUserPwdDB(payload) {\n    return Promise.resolve(\n      user.Mutation.updateUserPwdDB({\n        id: payload.id,\n        password: payload.newPassword\n      })\n    );\n  },\n\n  /**\n   * Change the user password in cognito\n   * @param {object} payload - Id, old password and new password of the user\n   */\n  changeUserPassword(payload) {\n    return Promise.resolve(\n      user.Query.changeUserPassword({\n        id: payload.id,\n        oldPassword: payload.oldPassword,\n        newPassword: payload.newPassword\n      })\n    );\n  },\n  /**\n   * Sign out the user from the application\n   */\n  async signOutUser() {\n    try {\n      await Auth.signOut();\n    } catch (error) {\n      console.log('error signing out: ', error);\n    }\n  }\n  // GROUP\n  // RIGHTS\n};\n\nexport default api;\n",
    "static": true,
    "longname": "/Users/Jean/Desktop/ownspace-react-native/ownspaceMobile/src/api/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "variable",
    "name": "api",
    "memberof": "src/api/index.js",
    "static": true,
    "longname": "src/api/index.js~api",
    "access": "public",
    "export": true,
    "importPath": "./src/api/index.js",
    "importStyle": "api",
    "description": "Api object that return all the promises",
    "lineNumber": 8,
    "type": {
      "types": [
        "{\"createFileTxt\": function, \"createUser\": function, \"loadUser\": function, \"updateUserNames\": function, \"updateUserPwdDB\": function, \"changeUserPassword\": function, \"signOutUser\": function}"
      ]
    }
  },
  {
    "__docId__": 50,
    "kind": "file",
    "name": "src/components/Home/createFile.js",
    "content": "import React, { useState } from 'react';\nimport { StyleSheet, View, TextInput, Keyboard } from 'react-native';\nimport Text from '@shared/ClientText';\nimport Header from '@shared/Header/index';\nimport CustomButton from '@shared/CustomButton';\nimport { createFile } from '@store/modules/document/actions';\nimport { useDispatch, connect } from 'react-redux';\nimport i18n from '@i18n/i18n';\nimport { useFonts } from '@use-expo/font';\nimport showToast from '@utils/showToast';\n\n/**\n * Connect to the store and extract data\n */\nconst mapStateToProps = state => {\n  return {\n    isUploading: state.document.upload.isUploading\n  };\n};\n\n/**\n * The CreateFile component\n */\nconst CreateFile = () => {\n  useFonts({\n    // eslint-disable-next-line global-require\n    DejaVuSans: require('../../../assets/fonts/DejaVuSans.ttf')\n  });\n  const [text, setText] = useState('');\n  const [title, setTitle] = useState('');\n  const dispatch = useDispatch();\n\n  /**\n   * Creates a file in a txt format\n   */\n  const createTxtFile = () => {\n    if (title.trim().length > 0 && text.trim().length > 0) {\n      if (title.trim().length > 6 && text.trim().length > 6) {\n        const payload = {\n          name: `${title.trim()}.txt`,\n          content: text\n        };\n        dispatch(createFile(payload));\n      } else {\n        showToast(i18n.t('createFile.tooShort'), true);\n      }\n    } else {\n      showToast(i18n.t('createFile.noEmpty'), true);\n    }\n  };\n\n  /**\n   * Render the CreateFile component\n   * @returns {React.Component} - CreateFile component\n   */\n  return (\n    <View style={styles.container}>\n      <Header />\n      <View style={styles.inputContainer}>\n        <Text style={styles.title}>{i18n.t('menuPlus.createFile')}</Text>\n        <TextInput\n          style={styles.inputFileName}\n          placeholder={i18n.t('createFile.placeholderName')}\n          placeholderTextColor=\"grey\"\n          selectionColor=\"grey\"\n          autoCapitalize=\"none\"\n          value={title}\n          onSubmitEditing={() => Keyboard.dismiss()}\n          onChangeText={txt => {\n            setTitle(txt);\n          }}\n        />\n        <TextInput\n          style={styles.input}\n          placeholder={i18n.t('createFile.placeholderContent')}\n          multiline={true}\n          value={text}\n          onSubmitEditing={() => Keyboard.dismiss()}\n          onChangeText={txt => {\n            setText(txt);\n          }}\n        />\n      </View>\n      <CustomButton confirmFunction={() => createTxtFile()} />\n    </View>\n  );\n};\n\n/**\n * Styles of CreateFile component\n */\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column'\n  },\n  inputContainer: { flex: 1, paddingLeft: 35, paddingRight: 35 },\n  title: {\n    fontWeight: 'bold',\n    marginTop: 15,\n    marginBottom: 15,\n    fontSize: 28\n  },\n  inputFileName: {\n    fontFamily: 'DejaVuSans',\n    backgroundColor: '#DBDBDB',\n    borderRadius: 6,\n    padding: 15,\n    marginBottom: 25\n  },\n  input: {\n    fontFamily: 'DejaVuSans',\n    flex: 1,\n    height: 50,\n    borderColor: '#DBDBDB',\n    color: 'black',\n    borderWidth: 1,\n    borderRadius: 6,\n    paddingLeft: 10,\n    marginBottom: 20\n  }\n});\n\nexport default connect(mapStateToProps)(CreateFile);\n",
    "static": true,
    "longname": "/Users/Jean/Desktop/ownspace-react-native/ownspaceMobile/src/components/Home/createFile.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 51,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "src/components/Home/createFile.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/Home/createFile.js~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "./src/components/Home/createFile.js",
    "importStyle": null,
    "description": "Connect to the store and extract data",
    "lineNumber": 15,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"isUploading\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 52,
    "kind": "function",
    "name": "CreateFile",
    "memberof": "src/components/Home/createFile.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/Home/createFile.js~CreateFile",
    "access": "public",
    "export": false,
    "importPath": "./src/components/Home/createFile.js",
    "importStyle": null,
    "description": "The CreateFile component",
    "lineNumber": 24,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 53,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/components/Home/createFile.js",
    "static": true,
    "longname": "src/components/Home/createFile.js~styles",
    "access": "public",
    "export": false,
    "importPath": "./src/components/Home/createFile.js",
    "importStyle": null,
    "description": "Styles of CreateFile component",
    "lineNumber": 92,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 54,
    "kind": "file",
    "name": "src/components/Home/index.js",
    "content": "import React, { useState, useEffect } from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport Header from '@shared/Header/index';\nimport NavMenu from '@components/Menu';\nimport MenuPlus from './menuPlus';\nimport { useDispatch } from 'react-redux';\nimport { loadUser } from '@store/modules/user/actions';\nimport { Auth } from 'aws-amplify';\n\n/**\n * The Home component\n * @param {object} loggedUser - The user logged object\n * @param {boolean} isLoggedIn - If the user is log in or not\n */\nconst Home = ({ loggedUser, isLoggedIn }) => {\n  const [menuPlus, setMenuPlus] = useState('');\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!isLoggedIn) {\n      initLoad();\n    } else {\n      loadCurrentAuthenticatedUser();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  });\n\n  /**\n   * Load the user to the user store if the user is not already logged in\n   */\n  const initLoad = () => {\n    const payload = {\n      userId: loggedUser.username,\n      token: loggedUser.signInUserSession.idToken.jwtToken\n    };\n    dispatch(loadUser(payload));\n  };\n\n  /**\n   * Load the current user that is authenticated\n   */\n  const loadCurrentAuthenticatedUser = async () => {\n    const user = await Auth.currentAuthenticatedUser();\n    if (user) {\n      loadConnectedUser(user);\n    }\n  };\n\n  /**\n   * Load the connected user\n   * @param {object} user - The user object\n   */\n  const loadConnectedUser = user => {\n    const payload = {\n      userId: user.attributes.sub,\n      token: user.signInUserSession.idToken.jwtToken\n    };\n    dispatch(loadUser(payload));\n  };\n\n  /**\n   * Open the plus menu\n   */\n  const openPlusMenu = () => {\n    menuPlus.open();\n  };\n\n  /**\n   * Set the menu reference\n   * @param {object} ref - Menu reference\n   */\n  const setRefPlus = ref => {\n    setMenuPlus(ref);\n  };\n\n  /**\n   * Render the Home component\n   * @returns {React.Component} - Home component\n   */\n  return (\n    <View style={styles.container}>\n      <Header />\n      <View style={styles.test}>\n        <NavMenu openPlusMenu={() => openPlusMenu()} />\n      </View>\n      <MenuPlus setRefPlus={setRefPlus} />\n    </View>\n  );\n};\n\n/**\n * Styles of Home component\n */\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    backgroundColor: 'white'\n  },\n  input: {\n    height: 50,\n    borderColor: 'black',\n    color: 'grey',\n    borderWidth: 1,\n    borderRadius: 6,\n    marginBottom: 20\n  },\n  test: { flex: 1 }\n});\n\nexport default Home;\n",
    "static": true,
    "longname": "/Users/Jean/Desktop/ownspace-react-native/ownspaceMobile/src/components/Home/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 55,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/components/Home/index.js",
    "static": true,
    "longname": "src/components/Home/index.js~styles",
    "access": "public",
    "export": false,
    "importPath": "./src/components/Home/index.js",
    "importStyle": null,
    "description": "Styles of Home component",
    "lineNumber": 94,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 56,
    "kind": "function",
    "name": "Home",
    "memberof": "src/components/Home/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/Home/index.js~Home",
    "access": "public",
    "export": true,
    "importPath": "./src/components/Home/index.js",
    "importStyle": "Home",
    "description": "The Home component",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "loggedUser",
        "description": "The user logged object"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isLoggedIn",
        "description": "If the user is log in or not"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 57,
    "kind": "file",
    "name": "src/components/Home/menuPlus.js",
    "content": "import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport Text from '@shared/ClientText';\nimport {\n  Menu,\n  MenuOptions,\n  MenuOption,\n  MenuTrigger,\n  renderers\n} from 'react-native-popup-menu';\nimport { ifIphoneX } from 'react-native-iphone-x-helper';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\nimport IconFeather from 'react-native-vector-icons/Feather';\nimport i18n from '@i18n/i18n';\nimport { Actions } from 'react-native-router-flux';\n\n/**\n * Animation that makes slide in the menu from the bottom of the screen.\n */\nconst { SlideInMenu } = renderers;\n\n/**\n * The MenuPlus component\n * @param {function} setRefPlus - Set the ref to the plus menu\n */\nconst MenuPlus = ({ setRefPlus }) => {\n  /**\n   * Render the MenuPlus component\n   * @returns {React.Component} - MenuPlus component\n   */\n  return (\n    <View>\n      <Menu ref={setRefPlus} renderer={SlideInMenu}>\n        <MenuTrigger />\n        <MenuOptions\n          customStyles={{\n            optionsContainer: {\n              borderTopLeftRadius: 16,\n              borderTopRightRadius: 16\n            },\n            optionsWrapper: {\n              ...ifIphoneX(\n                {\n                  paddingBottom: 30\n                },\n                {\n                  paddingBottom: 10\n                }\n              ),\n              paddingTop: 10\n            }\n          }}\n        >\n          <MenuOption\n            value={1}\n            customStyles={{\n              optionWrapper: styles.menuOptions\n            }}\n            onSelect={() => console.log('import file')}\n          >\n            <View style={styles.options}>\n              <Icon name=\"import\" size={25} color=\"#003466\" />\n              <Text style={styles.textMenuOptions}>\n                {i18n.t('menuPlus.importFile')}\n              </Text>\n            </View>\n          </MenuOption>\n          <MenuOption\n            value={2}\n            customStyles={{\n              optionWrapper: styles.menuOptions\n            }}\n            onSelect={() => Actions.createFile()}\n          >\n            <View style={styles.options}>\n              <IconFeather name=\"file-plus\" size={25} color=\"#003466\" />\n              <Text style={styles.textMenuOptions}>\n                {i18n.t('menuPlus.createFile')}\n              </Text>\n            </View>\n          </MenuOption>\n          <MenuOption\n            value={3}\n            customStyles={{\n              optionWrapper: styles.menuOptions\n            }}\n            onSelect={() => console.log('create folder')}\n          >\n            <View style={styles.options}>\n              <IconFeather name=\"folder-plus\" size={25} color=\"#003466\" />\n              <Text style={styles.textMenuOptions}>\n                {i18n.t('menuPlus.createFolder')}\n              </Text>\n            </View>\n          </MenuOption>\n          <MenuOption\n            value={4}\n            customStyles={{\n              optionWrapper: styles.menuOptionsLast\n            }}\n            onSelect={() => console.log('take picture')}\n          >\n            <View style={styles.options}>\n              <IconFeather name=\"camera\" size={25} color=\"#003466\" />\n              <Text style={styles.textMenuOptions}>\n                {i18n.t('menuPlus.takePicture')}\n              </Text>\n            </View>\n          </MenuOption>\n        </MenuOptions>\n      </Menu>\n    </View>\n  );\n};\n\n/**\n * Styles of CreateFile component\n */\nconst styles = StyleSheet.create({\n  menuOptions: {\n    margin: 7,\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginLeft: 15,\n    borderBottomWidth: 0.3,\n    borderColor: '#ccc',\n    paddingBottom: 15\n  },\n  menuOptionsLast: {\n    margin: 7,\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginLeft: 15\n  },\n  textMenuOptions: {\n    marginLeft: 20\n  },\n  options: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  }\n});\n\nexport default MenuPlus;\n",
    "static": true,
    "longname": "/Users/Jean/Desktop/ownspace-react-native/ownspaceMobile/src/components/Home/menuPlus.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 58,
    "kind": "variable",
    "name": "SlideInMenu",
    "memberof": "src/components/Home/menuPlus.js",
    "static": true,
    "longname": "src/components/Home/menuPlus.js~SlideInMenu",
    "access": "public",
    "export": false,
    "importPath": "./src/components/Home/menuPlus.js",
    "importStyle": null,
    "description": "Animation that makes slide in the menu from the bottom of the screen.",
    "lineNumber": 20,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 59,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/components/Home/menuPlus.js",
    "static": true,
    "longname": "src/components/Home/menuPlus.js~styles",
    "access": "public",
    "export": false,
    "importPath": "./src/components/Home/menuPlus.js",
    "importStyle": null,
    "description": "Styles of CreateFile component",
    "lineNumber": 119,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 60,
    "kind": "function",
    "name": "MenuPlus",
    "memberof": "src/components/Home/menuPlus.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/Home/menuPlus.js~MenuPlus",
    "access": "public",
    "export": true,
    "importPath": "./src/components/Home/menuPlus.js",
    "importStyle": "MenuPlus",
    "description": "The MenuPlus component",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "setRefPlus",
        "description": "Set the ref to the plus menu"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 61,
    "kind": "file",
    "name": "src/components/Login/generateTotp.js",
    "content": "import React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, View, Clipboard } from 'react-native';\nimport { Button } from 'react-native-paper';\nimport { Auth } from 'aws-amplify';\nimport i18n from '@i18n/i18n';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport showToast from '@utils/showToast';\n\n/**\n * The GenerateTotp component\n * @param {object} user - The user object\n * @param {function} setHasAuthApp - Set the state hasAuthApp to true\n */\nconst GenerateTotp = ({ user, setHasAuthApp }) => {\n  const [copiedText, setCopiedText] = useState('');\n\n  /**\n   * Copy the code for the authentication app to the clipboard\n   */\n  const copyToClipboard = () => {\n    Clipboard.setString(copiedText);\n    showToast(i18n.t('totp.copied'), true);\n  };\n\n  useEffect(() => {\n    Auth.setupTOTP(user).then(generatedCode => {\n      setCopiedText(generatedCode);\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  /**\n   * Render GenerateTotp component\n   * @returns {React.Component} - GenerateTotp component\n   */\n  return (\n    <View style={styles.container}>\n      <Text style={styles.titleCode}>{i18n.t('totp.titleGenerate')}</Text>\n      <View style={styles.codeContainer}>\n        <TouchableOpacity onPress={() => copyToClipboard()}>\n          <Text style={styles.code}>{copiedText}</Text>\n        </TouchableOpacity>\n      </View>\n      <View style={styles.helper}>\n        <Text style={styles.helperText}>{i18n.t('totp.copyToClipboard')}</Text>\n      </View>\n      <View style={styles.buttonsContainer}>\n        <Button\n          mode=\"contained\"\n          uppercase={false}\n          labelStyle={styles.btnColor}\n          style={styles.btnNext}\n          onPress={() => {\n            setHasAuthApp(true);\n          }}\n        >\n          {i18n.t('button.next')}\n        </Button>\n      </View>\n    </View>\n  );\n};\n\n/**\n * Styles of GenerateTotp component\n */\nconst styles = StyleSheet.create({\n  container: { flexDirection: 'column' },\n  codeContainer: {\n    marginTop: 24,\n    padding: 20,\n    borderRadius: 8,\n    alignItems: 'center',\n    borderColor: 'transparent',\n    backgroundColor: '#F7D8D3'\n  },\n  code: { fontSize: 17, color: 'white' },\n  titleCode: {\n    fontSize: 17,\n    color: 'white'\n  },\n  helper: {\n    marginTop: 10,\n    alignItems: 'center'\n  },\n  helperText: {\n    color: 'white',\n    opacity: 0.5\n  },\n  btnNext: {\n    backgroundColor: '#4788D3',\n    padding: 6,\n    paddingLeft: 6,\n    paddingRight: 6,\n    marginTop: 30,\n    fontSize: 17,\n    fontWeight: 'bold'\n  },\n  btncolor: { color: '#fff' }\n});\n\nexport default GenerateTotp;\n",
    "static": true,
    "longname": "/Users/Jean/Desktop/ownspace-react-native/ownspaceMobile/src/components/Login/generateTotp.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 62,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/components/Login/generateTotp.js",
    "static": true,
    "longname": "src/components/Login/generateTotp.js~styles",
    "access": "public",
    "export": false,
    "importPath": "./src/components/Login/generateTotp.js",
    "importStyle": null,
    "description": "Styles of GenerateTotp component",
    "lineNumber": 67,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 63,
    "kind": "function",
    "name": "GenerateTotp",
    "memberof": "src/components/Login/generateTotp.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/Login/generateTotp.js~GenerateTotp",
    "access": "public",
    "export": true,
    "importPath": "./src/components/Login/generateTotp.js",
    "importStyle": "GenerateTotp",
    "description": "The GenerateTotp component",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "The user object"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "setHasAuthApp",
        "description": "Set the state hasAuthApp to true"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 64,
    "kind": "file",
    "name": "src/components/Login/index.js",
    "content": "/* eslint-disable global-require */\n/* eslint-disable no-undef */\nimport React, { useState, useEffect } from 'react';\nimport { Button } from 'react-native-paper';\nimport {\n  StyleSheet,\n  TouchableOpacity,\n  View,\n  TextInput,\n  Linking,\n  Keyboard,\n  ImageBackground\n} from 'react-native';\nimport Logo from '../../shared/Logo/index';\nimport { Auth } from 'aws-amplify';\nimport { Actions } from 'react-native-router-flux';\nimport { TouchableWithoutFeedback } from 'react-native-gesture-handler';\nimport { ifIphoneX } from 'react-native-iphone-x-helper';\nimport i18n from '@i18n/i18n';\nimport Text from '@shared/Text';\nimport { useFonts } from '@use-expo/font';\nimport showToast from '@utils/showToast';\nimport { useDispatch } from 'react-redux';\nimport { resetAllStore } from '@store/modules/app/actions';\n\n/**\n * The Login component\n */\nconst Login = () => {\n  useFonts({\n    // eslint-disable-next-line global-require\n    HelveticaNeue: require('../../../assets/fonts/HelveticaNeue.ttf')\n  });\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(resetAllStore());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  /**\n   * Check if the email is valid or not\n   */\n  const _validateEmail = () => {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  };\n\n  /**\n   * Sign in to the app\n   */\n  const signIn = async () => {\n    if (_validateEmail() && password.trim().length >= 8) {\n      await Auth.signIn({\n        username: email,\n        password\n      })\n        .then(user => {\n          console.log('successful sign in !');\n          Actions.twoFactor({ user });\n        })\n        .catch(err => {\n          showToast(i18n.t('loginPage.invalidPasswordEmail'), true);\n          console.log('error while signing in =>', err);\n        });\n    } else {\n      showToast(i18n.t('loginPage.wrongPassword'), true);\n    }\n  };\n\n  /**\n   * Open the user mail app\n   */\n  const sendEmail = async () => {\n    await Linking.openURL('mailto:ownspaceco@gmail.com');\n  };\n\n  /**\n   * Render the Login component\n   * @returns {React.Component} - Login component\n   */\n  return (\n    <ImageBackground\n      source={require('@images/background_authentication.png')}\n      style={styles.container}\n    >\n      <View style={styles.header}>\n        <Text style={styles.companyName}>{i18n.t('loginPage.ownspace')}</Text>\n        <Text style={styles.welcomeTitle}>{i18n.t('loginPage.welcome')}</Text>\n      </View>\n      <View style={styles.textInputContainer}>\n        <TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>\n          <TextInput\n            style={styles.input}\n            placeholder={i18n.t('loginPage.email')}\n            textContentType=\"emailAddress\"\n            keyboardType=\"email-address\"\n            onChangeText={txt => {\n              setEmail(txt);\n            }}\n            autoCapitalize=\"none\"\n            returnKeyType=\"next\"\n            onSubmitEditing={() => {\n              passwordTextInput.focus();\n            }}\n            blurOnSubmit={false}\n          />\n          <TextInput\n            ref={input => {\n              passwordTextInput = input;\n            }}\n            style={styles.input}\n            placeholder={i18n.t('loginPage.password')}\n            textContentType=\"password\"\n            autoCapitalize=\"none\"\n            secureTextEntry={true}\n            onChangeText={txt => {\n              setPassword(txt);\n            }}\n          />\n        </TouchableWithoutFeedback>\n      </View>\n      <View style={styles.buttonContainer}>\n        <Button\n          mode=\"contained\"\n          uppercase={false}\n          labelStyle={styles.btnText}\n          style={styles.btnSignIn}\n          onPress={() => {\n            signIn();\n          }}\n        >\n          {i18n.t('loginPage.login')}\n        </Button>\n        <TouchableOpacity\n          style={styles.containerHelp}\n          onPress={() => sendEmail()}\n        >\n          <Text style={styles.btnHelp}>{i18n.t('loginPage.needHelp')}</Text>\n        </TouchableOpacity>\n      </View>\n      <View style={styles.logo}>\n        <Logo />\n      </View>\n    </ImageBackground>\n  );\n};\n\n/**\n * Styles of Login component\n */\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    paddingLeft: 50,\n    paddingRight: 50\n  },\n  headerContainer: {\n    backgroundColor: 'blue',\n    paddingTop: 120,\n    paddingBottom: 50\n  },\n  header: {\n    ...ifIphoneX(\n      {\n        paddingTop: 100,\n        paddingBottom: 70\n      },\n      {\n        paddingTop: 60,\n        paddingBottom: 40\n      }\n    )\n  },\n  companyName: {\n    fontWeight: 'bold',\n    fontSize: 48,\n    color: 'white'\n  },\n  welcomeTitle: {\n    fontSize: 24,\n    color: 'white',\n    opacity: 0.4\n  },\n  textInputContainer: {\n    paddingTop: 20\n  },\n  input: {\n    height: 50,\n    paddingLeft: 15,\n    fontFamily: 'HelveticaNeue',\n    borderColor: 'transparent',\n    backgroundColor: '#F7D8D3',\n    color: 'grey',\n    opacity: 0.7,\n    borderWidth: 1,\n    borderRadius: 6,\n    marginBottom: 25\n  },\n  buttonContainer: { flexDirection: 'row' },\n  btnSignIn: {\n    backgroundColor: '#4788D3',\n    padding: 6,\n    paddingLeft: 6,\n    paddingRight: 6,\n    fontSize: 17,\n    fontWeight: 'bold'\n  },\n  containerHelp: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  btnHelp: {\n    fontWeight: '500',\n    color: 'white'\n  },\n  logo: { flex: 1, flexDirection: 'column', justifyContent: 'flex-end' },\n  btnText: { fontFamily: 'HelveticaNeue', color: '#fff' }\n});\n\nexport default Login;\n",
    "static": true,
    "longname": "/Users/Jean/Desktop/ownspace-react-native/ownspaceMobile/src/components/Login/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 65,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/components/Login/index.js",
    "static": true,
    "longname": "src/components/Login/index.js~styles",
    "access": "public",
    "export": false,
    "importPath": "./src/components/Login/index.js",
    "importStyle": null,
    "description": "Styles of Login component",
    "lineNumber": 154,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 66,
    "kind": "function",
    "name": "Login",
    "memberof": "src/components/Login/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/Login/index.js~Login",
    "access": "public",
    "export": true,
    "importPath": "./src/components/Login/index.js",
    "importStyle": "Login",
    "description": "The Login component",
    "lineNumber": 29,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 67,
    "kind": "file",
    "name": "src/components/Login/secondAuthScreen.js",
    "content": "/* eslint-disable global-require */\nimport React, { useState } from 'react';\nimport { Button } from 'react-native-paper';\nimport { StyleSheet, View, TextInput, ImageBackground } from 'react-native';\nimport Text from '@shared/Text';\nimport Logo from '@shared/Logo/index';\nimport GenerateTotp from '@components/Login/generateTotp';\nimport { Auth } from 'aws-amplify';\nimport { ifIphoneX } from 'react-native-iphone-x-helper';\nimport { Actions } from 'react-native-router-flux';\nimport TotpAuthScreen from './totpAuthScreen';\nimport i18n from '@i18n/i18n';\nimport { useFonts } from '@use-expo/font';\nimport { useDispatch } from 'react-redux';\nimport { createUser } from '@store/modules/user/actions';\nimport { ROLE_ONE, ROLE_TWO, RECURRING_ROLE } from '@constants';\nimport showToast from '@utils/showToast';\n\n/**\n * The RenewPwdScreen component\n * @param {string} pwd - The default password\n * @param {function} setNewPasswordRequired - Set the new password\n * @param {function} confirmNewPwd - Confirm the new password\n */\nconst RenewPwdScreen = ({ pwd, setNewPasswordRequired, confirmNewPwd }) => {\n  useFonts({\n    // eslint-disable-next-line global-require\n    HelveticaNeue: require('../../../assets/fonts/HelveticaNeue.ttf')\n  });\n\n  /**\n   * Render RenewPwdScreen component\n   * @returns {React.Component} - RenewPwdScreen component\n   */\n  return (\n    <View>\n      <Text style={styles.text}>{i18n.t('newPassword.title')}</Text>\n      <TextInput\n        style={styles.input}\n        placeholder={i18n.t('newPassword.placeholder')}\n        textContentType=\"password\"\n        autoCapitalize=\"none\"\n        secureTextEntry={true}\n        value={pwd}\n        onChangeText={txt => {\n          setNewPasswordRequired(txt);\n        }}\n      />\n      <Button\n        mode=\"contained\"\n        uppercase={false}\n        labelStyle={styles.btnText}\n        style={styles.btnSignIn}\n        onPress={() => {\n          confirmNewPwd();\n        }}\n      >\n        {i18n.t('button.validate')}\n      </Button>\n    </View>\n  );\n};\n\n/**\n * The SecondAuthScreen component\n * @param {object} user - The user object\n */\nconst SecondAuthScreen = ({ user }) => {\n  const dispatch = useDispatch();\n  const [token, setToken] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [newPasswordRequired, setNewPasswordRequired] = useState(\n    user.challengeName === 'NEW_PASSWORD_REQUIRED'\n  );\n  const [hasAuthApp, setHasAuthApp] = useState(\n    user.challengeName === 'SOFTWARE_TOKEN_MFA'\n  );\n\n  /**\n   * Confirm the new password\n   */\n  const confirmNewPwd = async () => {\n    if (newPassword.trim().length >= 8) {\n      await Auth.completeNewPassword(user, newPassword);\n      setNewPasswordRequired(false);\n    } else {\n      showToast(i18n.t('newPassword.lengthError'), true);\n    }\n  };\n\n  /**\n   * Create the user to add to the DynamoDB\n   */\n  const createUserObject = async () => {\n    await Auth.currentUserInfo().then(userInfo => {\n      let role = '';\n      if (userInfo.attributes.email.substr(0, 6) === RECURRING_ROLE) {\n        role = ROLE_ONE;\n      } else {\n        role = ROLE_TWO;\n      }\n      const payload = {\n        id: userInfo.attributes.sub,\n        email: userInfo.attributes.email,\n        password: newPassword !== '' ? newPassword : 'password',\n        role\n      };\n      dispatch(createUser(payload));\n    });\n  };\n\n  /**\n   * Check if the token is correct\n   */\n  const verifyTotpToken = async () => {\n    try {\n      if (user.challengeName === 'SOFTWARE_TOKEN_MFA') {\n        const loggedUser = await Auth.confirmSignIn(\n          user,\n          token,\n          'SOFTWARE_TOKEN_MFA'\n        );\n        const isLoggedIn = true;\n        Actions.home({ loggedUser, isLoggedIn });\n      } else {\n        try {\n          await Auth.verifyTotpToken(user, token).then(() => {\n            Auth.setPreferredMFA(user, 'TOTP').then(data => {\n              if (data === 'SUCCESS') {\n                createUserObject();\n              }\n            });\n          });\n        } catch (e) {\n          showToast(i18n.t('totp.invalidToken'), true);\n          console.log('Token is not verified =>', e);\n        }\n      }\n    } catch (err) {\n      if (err.code === 'UserNotConfirmedException') {\n        // The error happens if the user didn't finish the confirmation step when signing up\n        // In this case you need to resend the code and confirm the user\n        // About how to resend the code and confirm the user, please check the signUp part\n      } else if (err.code === 'PasswordResetRequiredException') {\n        // The error happens when the password is reset in the Cognito console\n        // In this case you need to call forgotPassword to reset the password\n        // Please check the Forgot Password part.\n      } else if (err.code === 'NotAuthorizedException') {\n        // The error happens when the incorrect password is provided\n      } else if (err.code === 'UserNotFoundException') {\n        // The error happens when the supplied username/email does not exist in the Cognito user pool\n      } else {\n        showToast(i18n.t('totp.invalidToken'), true);\n        console.log(err);\n      }\n    }\n  };\n\n  /**\n   * Render SecondAuthScreen\n   * @returns {React.Component} - SecondAuthScreen component\n   */\n  return (\n    <ImageBackground\n      source={require('@images/background_authentication.png')}\n      style={styles.container}\n    >\n      <View style={styles.header}>\n        <Text style={styles.companyName}>{i18n.t('loginPage.ownspace')}</Text>\n        <Text style={styles.welcomeTitle}>\n          {i18n.t('loginPage.almostDone')}\n        </Text>\n      </View>\n      <View style={styles.textInputContainer}>\n        {newPasswordRequired ? (\n          <RenewPwdScreen\n            pwd={newPassword}\n            setNewPasswordRequired={pwd => setNewPassword(pwd)}\n            confirmNewPwd={() => confirmNewPwd()}\n          />\n        ) : (\n          <View>\n            {hasAuthApp ? (\n              <TotpAuthScreen\n                setToken={tkn => setToken(tkn)}\n                verifyTotpToken={() => verifyTotpToken()}\n              />\n            ) : (\n              <GenerateTotp\n                user={user}\n                setHasAuthApp={value => setHasAuthApp(value)}\n              />\n            )}\n          </View>\n        )}\n      </View>\n      <View style={styles.logo}>\n        <Logo />\n      </View>\n    </ImageBackground>\n  );\n};\n\n/**\n * Styles of SecondAuthScreen and RenewPwdScreen components\n */\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    paddingLeft: 50,\n    paddingRight: 50\n  },\n  header: {\n    ...ifIphoneX(\n      {\n        paddingTop: 100,\n        paddingBottom: 70\n      },\n      {\n        paddingTop: 60,\n        paddingBottom: 40\n      }\n    )\n  },\n  companyName: {\n    fontWeight: 'bold',\n    fontSize: 48,\n    color: 'white'\n  },\n  welcomeTitle: {\n    fontSize: 24,\n    color: 'white',\n    opacity: 0.4\n  },\n  textInputContainer: {\n    paddingTop: 20\n  },\n  input: {\n    height: 50,\n    paddingLeft: 15,\n    borderColor: 'transparent',\n    backgroundColor: '#F7D8D3',\n    color: 'grey',\n    opacity: 0.7,\n    borderWidth: 1,\n    borderRadius: 6,\n    marginBottom: 25\n  },\n  text: {\n    color: 'white',\n    marginBottom: 20,\n    fontSize: 17,\n    opacity: 0.7\n  },\n  btnSignIn: {\n    backgroundColor: '#4788D3',\n    padding: 6,\n    fontSize: 17,\n    fontWeight: 'bold'\n  },\n  logo: { flex: 1, flexDirection: 'column', justifyContent: 'flex-end' },\n  btnText: { color: 'white', fontFamily: 'HelveticaNeue' }\n});\n\nexport default SecondAuthScreen;\n",
    "static": true,
    "longname": "/Users/Jean/Desktop/ownspace-react-native/ownspaceMobile/src/components/Login/secondAuthScreen.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 68,
    "kind": "function",
    "name": "RenewPwdScreen",
    "memberof": "src/components/Login/secondAuthScreen.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/Login/secondAuthScreen.js~RenewPwdScreen",
    "access": "public",
    "export": false,
    "importPath": "./src/components/Login/secondAuthScreen.js",
    "importStyle": null,
    "description": "The RenewPwdScreen component",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "pwd",
        "description": "The default password"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "setNewPasswordRequired",
        "description": "Set the new password"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "confirmNewPwd",
        "description": "Confirm the new password"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 69,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/components/Login/secondAuthScreen.js",
    "static": true,
    "longname": "src/components/Login/secondAuthScreen.js~styles",
    "access": "public",
    "export": false,
    "importPath": "./src/components/Login/secondAuthScreen.js",
    "importStyle": null,
    "description": "Styles of SecondAuthScreen and RenewPwdScreen components",
    "lineNumber": 207,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 70,
    "kind": "function",
    "name": "SecondAuthScreen",
    "memberof": "src/components/Login/secondAuthScreen.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/Login/secondAuthScreen.js~SecondAuthScreen",
    "access": "public",
    "export": true,
    "importPath": "./src/components/Login/secondAuthScreen.js",
    "importStyle": "SecondAuthScreen",
    "description": "The SecondAuthScreen component",
    "lineNumber": 68,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "The user object"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 71,
    "kind": "file",
    "name": "src/components/Login/totpAuthScreen.js",
    "content": "import React from 'react';\nimport { Button } from 'react-native-paper';\nimport { StyleSheet, View, TextInput } from 'react-native';\nimport Text from '@shared/Text';\nimport i18n from '@i18n/i18n';\nimport { useFonts } from '@use-expo/font';\n\n/**\n * The TotpAuthScreen component\n * @param {function} setToken - Set the token\n * @param {function} verifyTotpToken - Verify the totp token\n */\nconst TotpAuthScreen = ({ setToken, verifyTotpToken }) => {\n  useFonts({\n    // eslint-disable-next-line global-require\n    HelveticaNeue: require('../../../assets/fonts/HelveticaNeue.ttf')\n  });\n\n  /**\n   * Render the TotpAuthScreen component\n   * @returns {React.Component} - TotpAuthScreen component\n   */\n  return (\n    <View>\n      <Text style={styles.text}>{i18n.t('totp.titleAuth')}</Text>\n      <TextInput\n        style={styles.input}\n        placeholder={i18n.t('totp.placeholder')}\n        textContentType=\"password\"\n        autoCapitalize=\"none\"\n        secureTextEntry={true}\n        onChangeText={txt => {\n          setToken(txt);\n        }}\n      />\n      <Button\n        mode=\"contained\"\n        uppercase={false}\n        labelStyle={styles.btnText}\n        style={styles.btnSignIn}\n        onPress={() => {\n          verifyTotpToken();\n        }}\n      >\n        {i18n.t('button.validate')}\n      </Button>\n    </View>\n  );\n};\n\n/**\n * Styles of TotpAuthScreen component\n */\nconst styles = StyleSheet.create({\n  text: {\n    color: 'white',\n    marginBottom: 20,\n    fontSize: 17,\n    opacity: 0.7\n  },\n  input: {\n    fontFamily: 'HelveticaNeue',\n    height: 50,\n    paddingLeft: 15,\n    borderColor: 'transparent',\n    backgroundColor: '#F7D8D3',\n    color: 'grey',\n    opacity: 0.7,\n    borderWidth: 1,\n    borderRadius: 6,\n    marginBottom: 25\n  },\n  btnSignIn: {\n    backgroundColor: '#4788D3',\n    padding: 6,\n    fontSize: 17,\n    fontWeight: 'bold'\n  },\n  btnText: { fontFamily: 'HelveticaNeue', color: '#fff' }\n});\n\nexport default TotpAuthScreen;\n",
    "static": true,
    "longname": "/Users/Jean/Desktop/ownspace-react-native/ownspaceMobile/src/components/Login/totpAuthScreen.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 72,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/components/Login/totpAuthScreen.js",
    "static": true,
    "longname": "src/components/Login/totpAuthScreen.js~styles",
    "access": "public",
    "export": false,
    "importPath": "./src/components/Login/totpAuthScreen.js",
    "importStyle": null,
    "description": "Styles of TotpAuthScreen component",
    "lineNumber": 54,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 73,
    "kind": "function",
    "name": "TotpAuthScreen",
    "memberof": "src/components/Login/totpAuthScreen.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/Login/totpAuthScreen.js~TotpAuthScreen",
    "access": "public",
    "export": true,
    "importPath": "./src/components/Login/totpAuthScreen.js",
    "importStyle": "TotpAuthScreen",
    "description": "The TotpAuthScreen component",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "setToken",
        "description": "Set the token"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "verifyTotpToken",
        "description": "Verify the totp token"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 74,
    "kind": "file",
    "name": "src/components/Menu/IconMenu.js",
    "content": "import React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport Icon from 'react-native-vector-icons/Feather';\nimport DotIcon from 'react-native-vector-icons/Entypo';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\n\n/**\n * The IconMenu component\n * @param {string} name - The icon name\n * @param {number} size - The icon size\n * @param {boolean} selected - If the icon is selected or not\n * @param {function} setSelected - Set the icon to selected\n */\nconst IconMenu = ({ name, size, selected, setSelected }) => {\n  /**\n   * Get the color of the icon\n   */\n  const getColor = () => {\n    if (selected) {\n      return '#E30043';\n    } else {\n      return 'white';\n    }\n  };\n\n  /**\n   * Get the style of the icon when it's selected\n   */\n  const getStyle = () => {\n    if (selected) {\n      return { marginTop: 20 };\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * Render the IconMenu component\n   * @returns {React.Component} - IconMenu component\n   */\n  return (\n    <View style={[styles.containerIcon, getStyle()]}>\n      <TouchableOpacity onPress={() => setSelected(name)}>\n        <Icon style={styles.icon} name={name} size={size} color={getColor()} />\n      </TouchableOpacity>\n      {selected ? (\n        <DotIcon name=\"dot-single\" size={20} color=\"#E30043\" />\n      ) : null}\n    </View>\n  );\n};\n\n/**\n * Styles of IconMenu component\n */\nconst styles = StyleSheet.create({\n  containerIcon: { flexDirection: 'column', alignItems: 'center' },\n  icon: {\n    paddingLeft: 30,\n    paddingRight: 30\n  }\n});\n\nexport default IconMenu;\n",
    "static": true,
    "longname": "/Users/Jean/Desktop/ownspace-react-native/ownspaceMobile/src/components/Menu/IconMenu.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 75,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/components/Menu/IconMenu.js",
    "static": true,
    "longname": "src/components/Menu/IconMenu.js~styles",
    "access": "public",
    "export": false,
    "importPath": "./src/components/Menu/IconMenu.js",
    "importStyle": null,
    "description": "Styles of IconMenu component",
    "lineNumber": 56,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 76,
    "kind": "function",
    "name": "IconMenu",
    "memberof": "src/components/Menu/IconMenu.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/Menu/IconMenu.js~IconMenu",
    "access": "public",
    "export": true,
    "importPath": "./src/components/Menu/IconMenu.js",
    "importStyle": "IconMenu",
    "description": "The IconMenu component",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "The icon name"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": "The icon size"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "selected",
        "description": "If the icon is selected or not"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "setSelected",
        "description": "Set the icon to selected"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 77,
    "kind": "file",
    "name": "src/components/Menu/index.js",
    "content": "import React, { useState } from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport IconMenu from './IconMenu';\nimport { Actions } from 'react-native-router-flux';\n\n/**\n * The NavMenu component\n * @param {function} openPlusMenu - Open the plus menu\n */\nconst NavMenu = ({ openPlusMenu }) => {\n  const [home, setHome] = useState(true);\n  const [options, setOptions] = useState(false);\n  const [userProfile, setUserProfile] = useState(false);\n\n  /**\n   * Set the right icon to selected\n   * @param {String} name - Icon name\n   */\n  const setSelected = name => {\n    switch (name) {\n      case 'home':\n        setHome(true);\n        setOptions(false);\n        setUserProfile(false);\n        break;\n      case 'plus-circle':\n        setHome(false);\n        setOptions(true);\n        setUserProfile(false);\n        openPlusMenu();\n        break;\n      case 'user':\n        setHome(false);\n        setOptions(false);\n        setUserProfile(true);\n        Actions.userProfile();\n        setHome(true);\n        setOptions(false);\n        setUserProfile(false);\n        break;\n      default:\n        setHome(true);\n        setOptions(false);\n        setUserProfile(false);\n    }\n  };\n\n  /**\n   * Render the NavMenu component\n   * @returns {React.Component} - NavMenu component\n   */\n  return (\n    <View style={styles.menuContainer}>\n      <IconMenu\n        name=\"home\"\n        size={30}\n        selected={home}\n        setSelected={name => setSelected(name)}\n      />\n      <IconMenu\n        name=\"plus-circle\"\n        size={30}\n        selected={options}\n        setSelected={name => setSelected(name)}\n      />\n      <IconMenu\n        name=\"user\"\n        size={30}\n        selected={userProfile}\n        setSelected={name => setSelected(name)}\n      />\n    </View>\n  );\n};\n\n/**\n * Styles of NavMenu component\n */\nconst styles = StyleSheet.create({\n  menuContainer: {\n    zIndex: 100,\n    position: 'absolute',\n    bottom: 40,\n    alignSelf: 'center',\n    backgroundColor: '#003466',\n    paddingLeft: 5,\n    paddingRight: 5,\n    marginLeft: 10,\n    marginRight: 10,\n    borderRadius: 30,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  }\n});\n\nexport default NavMenu;\n",
    "static": true,
    "longname": "/Users/Jean/Desktop/ownspace-react-native/ownspaceMobile/src/components/Menu/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 78,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/components/Menu/index.js",
    "static": true,
    "longname": "src/components/Menu/index.js~styles",
    "access": "public",
    "export": false,
    "importPath": "./src/components/Menu/index.js",
    "importStyle": null,
    "description": "Styles of NavMenu component",
    "lineNumber": 79,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 79,
    "kind": "function",
    "name": "NavMenu",
    "memberof": "src/components/Menu/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/Menu/index.js~NavMenu",
    "access": "public",
    "export": true,
    "importPath": "./src/components/Menu/index.js",
    "importStyle": "NavMenu",
    "description": "The NavMenu component",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "openPlusMenu",
        "description": "Open the plus menu"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 80,
    "kind": "file",
    "name": "src/components/Scenes/splashScreen.js",
    "content": "/* eslint-disable global-require */\nimport React from 'react';\nimport { ImageBackground, StyleSheet, Animated, Image } from 'react-native';\nimport Text from '@shared/Text';\nimport Logo from '@shared/Logo/images/os_logo.png';\nimport { ifIphoneX } from 'react-native-iphone-x-helper';\nimport { Actions } from 'react-native-router-flux';\nimport i18n from '@i18n/i18n';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { getToken } from '@store/modules/user/selectors';\nimport * as Font from 'expo-font';\n\n/**\n * Connect to the store and extract data\n */\nconst mapStateToProps = createSelector(getToken, token => {\n  return {\n    isLoggedIn: token !== null\n  };\n});\n\n/**\n * Require the client font\n */\nconst clientFont = {\n  // eslint-disable-next-line global-require\n  DejaVuSans: require('../../../assets/fonts/DejaVuSans.ttf')\n};\n\n/**\n * Require OwnSpace font\n */\nconst helveticaFont = {\n  // eslint-disable-next-line global-require\n  HelveticaNeue: require('../../../assets/fonts/HelveticaNeue.ttf')\n};\n\n/**\n * The SplashScreen class\n */\nclass SplashScreen extends React.Component {\n  /**\n   * SplashScreen constructor\n   * @param {props} props - SplashScreen props\n   */\n  constructor(props) {\n    super(props);\n\n    /**\n     * logoAnime: The logo image animation |\n     * logoText: The logo text animation\n     * @type {{logoAnime: Animated, logoText: Animated}}\n     */\n    this.state = {\n      logoAnime: new Animated.Value(0),\n      logoText: new Animated.Value(0)\n    };\n  }\n\n  /**\n   * Load client and OwnSpace fonts when componentWillMount\n   */\n  UNSAFE_componentWillMount() {\n    this.loadClientFont();\n    this.loadOwnSpaceFont();\n  }\n\n  /**\n   * Make animations when componentDidMount\n   */\n  componentDidMount() {\n    const { logoAnime, logoText } = this.state;\n    const { isLoggedIn } = this.props;\n\n    Animated.parallel([\n      Animated.spring(logoAnime, {\n        toValue: 1,\n        tension: 10,\n        friction: 2,\n        duration: 1500\n      }).start(),\n\n      Animated.timing(logoText, {\n        toValue: 1,\n        duration: 2000\n      })\n    ]).start(() => {\n      isLoggedIn ? Actions.home({ isLoggedIn }) : Actions.login();\n    });\n  }\n\n  /**\n   * Load client's font\n   */\n  loadClientFont = async () => {\n    await Font.loadAsync(clientFont);\n  };\n\n  /**\n   * Load Ownspace's font\n   */\n  loadOwnSpaceFont = async () => {\n    await Font.loadAsync(helveticaFont);\n  };\n\n  /**\n   * Render the SplashScreen class\n   * @returns {React.Component} - SplashScreen class\n   */\n  render() {\n    const { logoAnime, logoText } = this.state;\n\n    return (\n      <ImageBackground\n        source={require('@images/background_ownspace.png')}\n        style={styles.container}\n      >\n        <Animated.View\n          style={[\n            {\n              opacity: logoAnime,\n              top: logoAnime.interpolate({\n                inputRange: [0, 1],\n                outputRange: [80, 0]\n              })\n            },\n            styles.containerLogo\n          ]}\n        >\n          <Image source={Logo} style={styles.logo} />\n        </Animated.View>\n        <Animated.View style={[{ opacity: logoText }, styles.containerSlogan]}>\n          <Text style={styles.sloganPartOne}>\n            {i18n.t('splashScreen.sloganPartOne')}\n          </Text>\n          <Text style={styles.sloganPartTwo}>\n            {i18n.t('splashScreen.sloganPartTwo')}\n          </Text>\n        </Animated.View>\n      </ImageBackground>\n    );\n  }\n}\n\n/**\n * Styles of the SplashScreen class\n */\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  containerSlogan: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    marginBottom: 24\n  },\n  sloganPartOne: { color: 'white', fontSize: 34, paddingTop: 2 },\n  sloganPartTwo: { fontWeight: 'bold', color: 'white', fontSize: 36 },\n  logo: { width: 250, height: 250 },\n  containerLogo: {\n    justifyContent: 'flex-start',\n    flex: 1,\n    ...ifIphoneX(\n      {\n        paddingTop: 100,\n        paddingBottom: 70\n      },\n      {\n        paddingTop: 60,\n        paddingBottom: 40\n      }\n    )\n  }\n});\n\nexport default connect(mapStateToProps)(SplashScreen);\n",
    "static": true,
    "longname": "/Users/Jean/Desktop/ownspace-react-native/ownspaceMobile/src/components/Scenes/splashScreen.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 81,
    "kind": "variable",
    "name": "mapStateToProps",
    "memberof": "src/components/Scenes/splashScreen.js",
    "static": true,
    "longname": "src/components/Scenes/splashScreen.js~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "./src/components/Scenes/splashScreen.js",
    "importStyle": null,
    "description": "Connect to the store and extract data",
    "lineNumber": 17,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 82,
    "kind": "variable",
    "name": "clientFont",
    "memberof": "src/components/Scenes/splashScreen.js",
    "static": true,
    "longname": "src/components/Scenes/splashScreen.js~clientFont",
    "access": "public",
    "export": false,
    "importPath": "./src/components/Scenes/splashScreen.js",
    "importStyle": null,
    "description": "Require the client font",
    "lineNumber": 26,
    "type": {
      "types": [
        "{\"DejaVuSans\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 83,
    "kind": "variable",
    "name": "helveticaFont",
    "memberof": "src/components/Scenes/splashScreen.js",
    "static": true,
    "longname": "src/components/Scenes/splashScreen.js~helveticaFont",
    "access": "public",
    "export": false,
    "importPath": "./src/components/Scenes/splashScreen.js",
    "importStyle": null,
    "description": "Require OwnSpace font",
    "lineNumber": 34,
    "type": {
      "types": [
        "{\"HelveticaNeue\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 84,
    "kind": "class",
    "name": "SplashScreen",
    "memberof": "src/components/Scenes/splashScreen.js",
    "static": true,
    "longname": "src/components/Scenes/splashScreen.js~SplashScreen",
    "access": "public",
    "export": false,
    "importPath": "./src/components/Scenes/splashScreen.js",
    "importStyle": null,
    "description": "The SplashScreen class",
    "lineNumber": 42,
    "interface": false,
    "extends": [
      "react~React.Component"
    ],
    "ignore": true
  },
  {
    "__docId__": 85,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/components/Scenes/splashScreen.js~SplashScreen",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/Scenes/splashScreen.js~SplashScreen#constructor",
    "access": "public",
    "description": "SplashScreen constructor",
    "lineNumber": 47,
    "params": [
      {
        "nullable": null,
        "types": [
          "props"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "SplashScreen props"
      }
    ]
  },
  {
    "__docId__": 86,
    "kind": "member",
    "name": "state",
    "memberof": "src/components/Scenes/splashScreen.js~SplashScreen",
    "static": false,
    "longname": "src/components/Scenes/splashScreen.js~SplashScreen#state",
    "access": "public",
    "description": "logoAnime: The logo image animation |\nlogoText: The logo text animation",
    "lineNumber": 55,
    "type": {
      "nullable": null,
      "types": [
        "{logoAnime: Animated, logoText: Animated}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 87,
    "kind": "method",
    "name": "UNSAFE_componentWillMount",
    "memberof": "src/components/Scenes/splashScreen.js~SplashScreen",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/Scenes/splashScreen.js~SplashScreen#UNSAFE_componentWillMount",
    "access": "public",
    "description": "Load client and OwnSpace fonts when componentWillMount",
    "lineNumber": 64,
    "params": [],
    "return": null
  },
  {
    "__docId__": 88,
    "kind": "method",
    "name": "componentDidMount",
    "memberof": "src/components/Scenes/splashScreen.js~SplashScreen",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/Scenes/splashScreen.js~SplashScreen#componentDidMount",
    "access": "public",
    "description": "Make animations when componentDidMount",
    "lineNumber": 72,
    "params": [],
    "return": null
  },
  {
    "__docId__": 89,
    "kind": "member",
    "name": "loadClientFont",
    "memberof": "src/components/Scenes/splashScreen.js~SplashScreen",
    "static": false,
    "longname": "src/components/Scenes/splashScreen.js~SplashScreen#loadClientFont",
    "access": "public",
    "description": "Load client's font",
    "lineNumber": 96,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 90,
    "kind": "member",
    "name": "loadOwnSpaceFont",
    "memberof": "src/components/Scenes/splashScreen.js~SplashScreen",
    "static": false,
    "longname": "src/components/Scenes/splashScreen.js~SplashScreen#loadOwnSpaceFont",
    "access": "public",
    "description": "Load Ownspace's font",
    "lineNumber": 103,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 91,
    "kind": "method",
    "name": "render",
    "memberof": "src/components/Scenes/splashScreen.js~SplashScreen",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/Scenes/splashScreen.js~SplashScreen#render",
    "access": "public",
    "description": "Render the SplashScreen class",
    "lineNumber": 111,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{React.Component} - SplashScreen class"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "React.Component"
      ],
      "spread": false,
      "description": "SplashScreen class"
    },
    "params": []
  },
  {
    "__docId__": 92,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/components/Scenes/splashScreen.js",
    "static": true,
    "longname": "src/components/Scenes/splashScreen.js~styles",
    "access": "public",
    "export": false,
    "importPath": "./src/components/Scenes/splashScreen.js",
    "importStyle": null,
    "description": "Styles of the SplashScreen class",
    "lineNumber": 149,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 93,
    "kind": "file",
    "name": "src/components/UserProfile/index.js",
    "content": "import React, { useState } from 'react';\nimport {\n  View,\n  StyleSheet,\n  TextInput,\n  ScrollView,\n  Alert,\n  Linking\n} from 'react-native';\nimport Header from '@shared/Header/withBack';\nimport Text from '@shared/ClientText';\nimport i18n from '@i18n/i18n';\nimport { Actions } from 'react-native-router-flux';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport Avatar from '@shared/Avatar';\nimport { connect, useDispatch } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { getUser } from '@store/modules/user/selectors';\nimport { useFonts } from '@use-expo/font';\nimport { Button } from 'react-native-paper';\nimport {\n  updateUserNames,\n  updateUserPassword,\n  signOut\n} from '@store/modules/user/actions';\nimport showToast from '@utils/showToast';\n\n/**\n * Connect to the store and extract data\n */\nconst mapStateToProps = createSelector(getUser, user => {\n  return {\n    user\n  };\n});\n\n/**\n * The UserProfile component\n * @param {object} user - The user object\n */\nconst UserProfile = ({ user }) => {\n  useFonts({\n    // eslint-disable-next-line global-require\n    DejaVuSans: require('../../../assets/fonts/DejaVuSans.ttf')\n  });\n  const [firstname, setFirstname] = useState(user.firstname);\n  const [lastname, setLastname] = useState(user.lastname);\n  const [oldPassword, setOldPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const dispatch = useDispatch();\n\n  /**\n   * Update the user firstname and lastname\n   */\n  const _updateUserProfile = () => {\n    if (user.firstname !== '' || user.lastname !== '') {\n      if (firstname !== user.firstname || lastname !== user.lastname) {\n        const payload = {\n          id: user.id,\n          firstname,\n          lastname\n        };\n        dispatch(updateUserNames(payload));\n      } else {\n        showToast(i18n.t('userProfile.nothingToUdpate'), true);\n      }\n    }\n\n    if (oldPassword !== '' && newPassword !== '') {\n      const payload = {\n        id: user.id,\n        oldPassword,\n        newPassword\n      };\n      dispatch(updateUserPassword(payload));\n      setNewPassword('');\n      setOldPassword('');\n    }\n  };\n\n  /**\n   * Sign out of the application\n   */\n  const _signOut = () => {\n    Alert.alert(\n      i18n.t('userProfile.signOut'),\n      i18n.t('userProfile.confirmSignOut'),\n      [\n        {\n          text: i18n.t('userProfile.cancel'),\n          style: 'cancel'\n        },\n        {\n          text: i18n.t('userProfile.signOut'),\n          onPress: () => dispatch(signOut())\n        }\n      ]\n    );\n  };\n\n  /**\n   * Open the user mail app\n   */\n  const _sendEmail = async () => {\n    await Linking.openURL('mailto:ownspaceco@gmail.com');\n  };\n\n  /**\n   * Render the UserProfile component\n   * @returns {React.Component} - UserProfile component\n   */\n  return (\n    <View style={styles.container}>\n      <Header goTo={() => Actions.home()} />\n      <View style={styles.header}>\n        <TouchableOpacity style={styles.avatarContainer}>\n          <Avatar\n            style={styles.avatarPicture}\n            image={user.picture}\n            size={100}\n            borderRadius={50}\n          />\n        </TouchableOpacity>\n        {user.firstname !== null && user.lastname !== null ? (\n          <Text style={styles.profileName}>\n            {`${user.firstname} ${user.lastname}`}\n          </Text>\n        ) : (\n          <Text style={styles.profileName}>{user.email}</Text>\n        )}\n      </View>\n      <View style={styles.containerInfos}>\n        <ScrollView>\n          <Text style={styles.titleInput}>\n            {i18n.t('userProfile.lastname')}\n          </Text>\n          <TextInput\n            style={styles.input}\n            placeholder={i18n.t('userProfile.lastnamePlaceholder')}\n            placeholderTextColor=\"grey\"\n            textContentType=\"name\"\n            selectionColor=\"grey\"\n            autoCapitalize=\"none\"\n            onChangeText={txt => {\n              setLastname(txt);\n            }}\n            value={lastname}\n            returnKeyType=\"next\"\n          />\n          <Text style={styles.titleInput}>\n            {i18n.t('userProfile.firstname')}\n          </Text>\n          <TextInput\n            style={styles.input}\n            placeholder={i18n.t('userProfile.firstnamePlaceholder')}\n            placeholderTextColor=\"grey\"\n            selectionColor=\"grey\"\n            textContentType=\"name\"\n            onChangeText={txt => {\n              setFirstname(txt);\n            }}\n            value={firstname}\n            autoCapitalize=\"none\"\n            returnKeyType=\"next\"\n          />\n          <Text style={styles.titleInput}>{i18n.t('userProfile.email')}</Text>\n          <TextInput\n            style={styles.input}\n            placeholderTextColor=\"grey\"\n            textContentType=\"emailAddress\"\n            autoCapitalize=\"none\"\n            value={user.email}\n            editable={false}\n            returnKeyType=\"next\"\n          />\n          <Text style={styles.titleInput}>\n            {i18n.t('userProfile.oldPassword')}\n          </Text>\n          <TextInput\n            style={styles.input}\n            placeholder=\"••••••••••••\"\n            placeholderTextColor=\"grey\"\n            selectionColor=\"grey\"\n            textContentType=\"password\"\n            secureTextEntry={true}\n            onChangeText={txt => {\n              setOldPassword(txt);\n            }}\n            autoCapitalize=\"none\"\n            value={oldPassword}\n            returnKeyType=\"next\"\n          />\n          <Text style={styles.titleInput}>\n            {i18n.t('userProfile.newPassword')}\n          </Text>\n          <TextInput\n            style={styles.input}\n            placeholder=\"••••••••••••\"\n            placeholderTextColor=\"grey\"\n            selectionColor=\"grey\"\n            textContentType=\"password\"\n            secureTextEntry={true}\n            onChangeText={txt => {\n              setNewPassword(txt);\n            }}\n            autoCapitalize=\"none\"\n            value={newPassword}\n            returnKeyType=\"next\"\n          />\n          <View style={styles.btnContainer}>\n            <Button\n              mode=\"contained\"\n              uppercase={false}\n              labelStyle={styles.btnText}\n              contentStyle={styles.btnDimension}\n              style={styles.btnLogOut}\n              onPress={() => _signOut()}\n            >\n              {i18n.t('userProfile.signOut')}\n            </Button>\n            <Button\n              mode=\"contained\"\n              uppercase={false}\n              labelStyle={styles.btnText}\n              contentStyle={styles.btnDimension}\n              style={styles.btnEdit}\n              onPress={() => _updateUserProfile()}\n            >\n              {i18n.t('userProfile.edit')}\n            </Button>\n          </View>\n          <TouchableOpacity\n            style={styles.helpContainer}\n            onPress={() => _sendEmail()}\n          >\n            <Text style={styles.helpText}>{i18n.t('userProfile.help')}</Text>\n          </TouchableOpacity>\n        </ScrollView>\n      </View>\n    </View>\n  );\n};\n\n/**\n * Styles of the UserProfile component\n */\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    backgroundColor: 'white'\n  },\n  header: {\n    flexDirection: 'column',\n    alignItems: 'center',\n    paddingTop: 24,\n    paddingBottom: 24\n  },\n  avatarPicture: {\n    backgroundColor: '#FF6161'\n  },\n  avatarContainer: { marginBottom: 20 },\n  profileName: {\n    fontSize: 20,\n    fontWeight: '500',\n    color: '#003466',\n    marginBottom: 20\n  },\n  titleInput: { fontSize: 17, fontWeight: 'bold', marginBottom: 4 },\n  input: {\n    fontFamily: 'DejaVuSans',\n    backgroundColor: '#DBDBDB',\n    borderRadius: 6,\n    padding: 15,\n    marginBottom: 20\n  },\n  containerInfos: {\n    flex: 1,\n    flexDirection: 'column',\n    borderTopLeftRadius: 24,\n    borderTopRightRadius: 24,\n    borderTopWidth: 2,\n    borderLeftWidth: 2,\n    borderRightWidth: 2,\n    borderColor: '#003466',\n    paddingHorizontal: 45,\n    paddingVertical: 20\n  },\n  btnDimension: {\n    height: 45,\n    width: 130\n  },\n  btnText: {\n    fontSize: 13,\n    fontWeight: 'bold',\n    fontFamily: 'DejaVuSans',\n    color: '#fff'\n  },\n  btnLogOut: {\n    backgroundColor: '#E30043',\n    color: '#42688B'\n  },\n  btnEdit: {\n    backgroundColor: '#003466',\n    borderColor: 'black'\n  },\n  btnContainer: {\n    flexDirection: 'row',\n    paddingTop: 20,\n    paddingBottom: 20,\n    marginBottom: 10,\n    justifyContent: 'space-between'\n  },\n  helpContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  helpText: {\n    fontSize: 18,\n    color: '#003466',\n    fontWeight: 'bold',\n    textDecorationLine: 'underline'\n  }\n});\nexport default connect(mapStateToProps)(UserProfile);\n",
    "static": true,
    "longname": "/Users/Jean/Desktop/ownspace-react-native/ownspaceMobile/src/components/UserProfile/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 94,
    "kind": "variable",
    "name": "mapStateToProps",
    "memberof": "src/components/UserProfile/index.js",
    "static": true,
    "longname": "src/components/UserProfile/index.js~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "./src/components/UserProfile/index.js",
    "importStyle": null,
    "description": "Connect to the store and extract data",
    "lineNumber": 31,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 95,
    "kind": "function",
    "name": "UserProfile",
    "memberof": "src/components/UserProfile/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/UserProfile/index.js~UserProfile",
    "access": "public",
    "export": false,
    "importPath": "./src/components/UserProfile/index.js",
    "importStyle": null,
    "description": "The UserProfile component",
    "lineNumber": 41,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "The user object"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 96,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/components/UserProfile/index.js",
    "static": true,
    "longname": "src/components/UserProfile/index.js~styles",
    "access": "public",
    "export": false,
    "importPath": "./src/components/UserProfile/index.js",
    "importStyle": null,
    "description": "Styles of the UserProfile component",
    "lineNumber": 247,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 97,
    "kind": "file",
    "name": "src/constants/index.js",
    "content": "// TOTP Screen\n\n/**\n * First client role\n */\nexport const ROLE_ONE = 'student';\n\n/**\n * Second client role\n */\nexport const ROLE_TWO = 'teacher';\n\n/**\n * Third client role\n */\nexport const ROLE_THREE = 'admin';\n\n/**\n * Prefix used to filter role\n */\nexport const RECURRING_ROLE = 'dsmc19';\n",
    "static": true,
    "longname": "/Users/Jean/Desktop/ownspace-react-native/ownspaceMobile/src/constants/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 98,
    "kind": "variable",
    "name": "ROLE_ONE",
    "memberof": "src/constants/index.js",
    "static": true,
    "longname": "src/constants/index.js~ROLE_ONE",
    "access": "public",
    "export": true,
    "importPath": "./src/constants/index.js",
    "importStyle": "{ROLE_ONE}",
    "description": "First client role",
    "lineNumber": 6,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 99,
    "kind": "variable",
    "name": "ROLE_TWO",
    "memberof": "src/constants/index.js",
    "static": true,
    "longname": "src/constants/index.js~ROLE_TWO",
    "access": "public",
    "export": true,
    "importPath": "./src/constants/index.js",
    "importStyle": "{ROLE_TWO}",
    "description": "Second client role",
    "lineNumber": 11,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 100,
    "kind": "variable",
    "name": "ROLE_THREE",
    "memberof": "src/constants/index.js",
    "static": true,
    "longname": "src/constants/index.js~ROLE_THREE",
    "access": "public",
    "export": true,
    "importPath": "./src/constants/index.js",
    "importStyle": "{ROLE_THREE}",
    "description": "Third client role",
    "lineNumber": 16,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 101,
    "kind": "variable",
    "name": "RECURRING_ROLE",
    "memberof": "src/constants/index.js",
    "static": true,
    "longname": "src/constants/index.js~RECURRING_ROLE",
    "access": "public",
    "export": true,
    "importPath": "./src/constants/index.js",
    "importStyle": "{RECURRING_ROLE}",
    "description": "Prefix used to filter role",
    "lineNumber": 21,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 102,
    "kind": "file",
    "name": "src/router/index.js",
    "content": "import { Router, Scene, ActionConst } from 'react-native-router-flux';\nimport React from 'react';\nimport Login from '@components/Login';\nimport SecondAuthScreen from '@components/Login/secondAuthScreen';\nimport Home from '@components/Home';\nimport CreateFile from '@components/Home/createFile';\nimport SplashScreen from '@components/Scenes/splashScreen';\nimport UserProfile from '@components/UserProfile';\n\n/**\n * AppRouter defines all the routes of OwnSpace app\n */\nconst AppRouter = () => {\n  return (\n    <Router>\n      <Scene modal key=\"root\">\n        <Scene\n          key=\"splashScreen\"\n          type={ActionConst.REPLACE}\n          component={SplashScreen}\n          title=\"SplashScreen\"\n          hideNavBar\n          initial\n        />\n        <Scene\n          key=\"login\"\n          type={ActionConst.REPLACE}\n          component={Login}\n          title=\"ConnexionScreen\"\n          hideNavBar\n        />\n        <Scene\n          key=\"twoFactor\"\n          type={ActionConst.REPLACE}\n          component={SecondAuthScreen}\n          title=\"SecondAuthScreen\"\n          hideNavBar\n        />\n        <Scene\n          key=\"home\"\n          type={ActionConst.REPLACE}\n          component={Home}\n          title=\"HomeScreen\"\n          hideNavBar\n        />\n        <Scene\n          key=\"createFile\"\n          type={ActionConst.JUMP}\n          component={CreateFile}\n          title=\"CreateFileScreen\"\n          hideNavBar\n        />\n        <Scene\n          key=\"userProfile\"\n          type={ActionConst.PUSH}\n          component={UserProfile}\n          title=\"UserProfile\"\n          hideNavBar\n        />\n      </Scene>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n",
    "static": true,
    "longname": "/Users/Jean/Desktop/ownspace-react-native/ownspaceMobile/src/router/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 103,
    "kind": "function",
    "name": "AppRouter",
    "memberof": "src/router/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/router/index.js~AppRouter",
    "access": "public",
    "export": true,
    "importPath": "./src/router/index.js",
    "importStyle": "AppRouter",
    "description": "AppRouter defines all the routes of OwnSpace app",
    "lineNumber": 13,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 104,
    "kind": "file",
    "name": "src/shared/Avatar/index.js",
    "content": "import React from 'react';\nimport { Image } from 'react-native';\n\n/**\n * The Avatar component\n * @param {string} image - URL or URI of the image\n * @param {number} size - The avatar's size\n * @param {number} borderRadius - The avatar's border radius\n */\nconst Avatar = ({ image, size, borderRadius }) => {\n  /**\n   * Get the avatar style\n   */\n  const _typeStyle = () => {\n    return {\n      width: size,\n      height: size,\n      borderRadius,\n      borderColor: '#003466',\n      borderWidth: 1\n    };\n  };\n\n  /**\n   * Render the Avatar component\n   * @returns {React.Component} - The Avatar component\n   */\n  return (\n    <Image\n      source={{\n        uri:\n          image === null\n            ? 'https://jtphe.ddns.net/public/images/profilePicture.png'\n            : image\n      }}\n      style={[_typeStyle()]}\n    />\n  );\n};\n\nexport default Avatar;\n",
    "static": true,
    "longname": "/Users/Jean/Desktop/ownspace-react-native/ownspaceMobile/src/shared/Avatar/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 105,
    "kind": "function",
    "name": "Avatar",
    "memberof": "src/shared/Avatar/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/shared/Avatar/index.js~Avatar",
    "access": "public",
    "export": true,
    "importPath": "./src/shared/Avatar/index.js",
    "importStyle": "Avatar",
    "description": "The Avatar component",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "image",
        "description": "URL or URI of the image"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": "The avatar's size"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "borderRadius",
        "description": "The avatar's border radius"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 106,
    "kind": "file",
    "name": "src/shared/ClientText/index.js",
    "content": "import React from 'react';\nimport { Text, StyleSheet } from 'react-native';\nimport { useFonts } from '@use-expo/font';\n\n/**\n * The custom TextClient component\n * @param {object} style - Style of the Text component\n * @param {string} ellipsizeMode - Defines how text will be truncated\n * @param {boolean} selectable - Lets the user select text, to use the native copy and paste functionality\n * @param {string} children - The string of the Text component\n */\nconst TextClient = props => {\n  useFonts({\n    // eslint-disable-next-line global-require\n    DejaVuSans: require('../../../assets/fonts/DejaVuSans.ttf')\n  });\n  const { style, ellipsizeMode, selectable, children } = props;\n\n  /**\n   * Render the TextClient component\n   * @returns {React.Component} - TextClient component\n   */\n  return (\n    <Text\n      style={[style, styles.fontStyle]}\n      ellipsizeMode={ellipsizeMode}\n      selectable={selectable}\n    >\n      {children}\n    </Text>\n  );\n};\n\n/**\n * Styles of TextClient component\n */\nconst styles = StyleSheet.create({\n  fontStyle: { fontFamily: 'DejaVuSans' }\n});\n\nexport default TextClient;\n",
    "static": true,
    "longname": "/Users/Jean/Desktop/ownspace-react-native/ownspaceMobile/src/shared/ClientText/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 107,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/shared/ClientText/index.js",
    "static": true,
    "longname": "src/shared/ClientText/index.js~styles",
    "access": "public",
    "export": false,
    "importPath": "./src/shared/ClientText/index.js",
    "importStyle": null,
    "description": "Styles of TextClient component",
    "lineNumber": 37,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 108,
    "kind": "function",
    "name": "TextClient",
    "memberof": "src/shared/ClientText/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/shared/ClientText/index.js~TextClient",
    "access": "public",
    "export": true,
    "importPath": "./src/shared/ClientText/index.js",
    "importStyle": "TextClient",
    "description": "The custom TextClient component",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "style",
        "description": "Style of the Text component"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "ellipsizeMode",
        "description": "Defines how text will be truncated"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "selectable",
        "description": "Lets the user select text, to use the native copy and paste functionality"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "children",
        "description": "The string of the Text component"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 109,
    "kind": "file",
    "name": "src/shared/CustomButton/index.js",
    "content": "import React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Button } from 'react-native-paper';\nimport { Actions } from 'react-native-router-flux';\nimport i18n from '@i18n/i18n';\nimport { useFonts } from '@use-expo/font';\n\n/**\n * The CustomButton component\n * @param {function} confirmFunction - Confirm the function passed to the confirm button\n */\nconst CustomButton = ({ confirmFunction }) => {\n  useFonts({\n    // eslint-disable-next-line global-require\n    DejaVuSans: require('../../../assets/fonts/DejaVuSans.ttf')\n  });\n\n  /**\n   * Render the CustomButton component\n   * @returns {React.Component} - CustomButton component\n   */\n  return (\n    <View style={styles.btnContainer}>\n      <Button\n        mode=\"contained\"\n        uppercase={false}\n        labelStyle={styles.cancelText}\n        contentStyle={styles.btnDimension}\n        style={styles.btnCancel}\n        onPress={() => Actions.pop()}\n      >\n        {i18n.t('button.cancel')}\n      </Button>\n      <Button\n        mode=\"contained\"\n        uppercase={false}\n        labelStyle={styles.confirmText}\n        contentStyle={styles.btnDimension}\n        style={styles.btnConfirm}\n        onPress={() => confirmFunction()}\n      >\n        {i18n.t('button.validate')}\n      </Button>\n    </View>\n  );\n};\n\n/**\n * Styles of CustomButton component\n */\nconst styles = StyleSheet.create({\n  btnContainer: {\n    flexDirection: 'row',\n    padding: 35,\n    paddingTop: 20,\n    paddingBottom: 20,\n    marginBottom: 10,\n    justifyContent: 'space-between'\n  },\n  btnCancel: {\n    justifyContent: 'center',\n    backgroundColor: 'white',\n    borderColor: '#003466',\n    borderWidth: 1,\n    color: '#42688B'\n  },\n  btnConfirm: {\n    justifyContent: 'center',\n    backgroundColor: '#003466',\n    borderColor: 'black'\n  },\n  btnDimension: {\n    height: 45,\n    width: 100\n  },\n  cancelText: { fontFamily: 'DejaVuSans', color: '#42688B' },\n  confirmText: { fontFamily: 'DejaVuSans', color: '#fff' }\n});\n\nexport default CustomButton;\n",
    "static": true,
    "longname": "/Users/Jean/Desktop/ownspace-react-native/ownspaceMobile/src/shared/CustomButton/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 110,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/shared/CustomButton/index.js",
    "static": true,
    "longname": "src/shared/CustomButton/index.js~styles",
    "access": "public",
    "export": false,
    "importPath": "./src/shared/CustomButton/index.js",
    "importStyle": null,
    "description": "Styles of CustomButton component",
    "lineNumber": 51,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 111,
    "kind": "function",
    "name": "CustomButton",
    "memberof": "src/shared/CustomButton/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/shared/CustomButton/index.js~CustomButton",
    "access": "public",
    "export": true,
    "importPath": "./src/shared/CustomButton/index.js",
    "importStyle": "CustomButton",
    "description": "The CustomButton component",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "confirmFunction",
        "description": "Confirm the function passed to the confirm button"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 112,
    "kind": "file",
    "name": "src/shared/Header/index.js",
    "content": "/* eslint-disable global-require */\nimport React from 'react';\nimport { View, Image, StyleSheet } from 'react-native';\nimport { ifIphoneX } from 'react-native-iphone-x-helper';\n\n/**\n * The Header component\n */\nconst Header = () => {\n  /**\n   * Render the Header component\n   * @returns {React.Component} - Header component\n   */\n  return (\n    <View style={styles.container}>\n      <Image\n        source={require('./cci_logo.png')}\n        style={styles.logo}\n        resizeMode=\"contain\"\n      />\n    </View>\n  );\n};\n\n/**\n * Styles of Header component\n */\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#003466',\n    paddingBottom: 30,\n    ...ifIphoneX(\n      {\n        paddingTop: 60\n      },\n      {\n        paddingTop: 40\n      }\n    )\n  },\n  logo: {\n    alignSelf: 'center',\n    marginLeft: -10,\n    resizeMode: 'contain',\n    width: 50,\n    height: 50\n  }\n});\n\nexport default Header;\n",
    "static": true,
    "longname": "/Users/Jean/Desktop/ownspace-react-native/ownspaceMobile/src/shared/Header/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 113,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/shared/Header/index.js",
    "static": true,
    "longname": "src/shared/Header/index.js~styles",
    "access": "public",
    "export": false,
    "importPath": "./src/shared/Header/index.js",
    "importStyle": null,
    "description": "Styles of Header component",
    "lineNumber": 28,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 114,
    "kind": "function",
    "name": "Header",
    "memberof": "src/shared/Header/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/shared/Header/index.js~Header",
    "access": "public",
    "export": true,
    "importPath": "./src/shared/Header/index.js",
    "importStyle": "Header",
    "description": "The Header component",
    "lineNumber": 9,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 115,
    "kind": "file",
    "name": "src/shared/Header/withBack.js",
    "content": "/* eslint-disable global-require */\nimport React from 'react';\nimport { View, Image, StyleSheet } from 'react-native';\nimport { ifIphoneX } from 'react-native-iphone-x-helper';\nimport Icon from 'react-native-vector-icons/Ionicons';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\n\n/**\n * The Header component with a back button\n * @param {function} goTo - Where to go when click on the back button\n */\nconst WithBack = ({ goTo }) => {\n  /**\n   * Render the WithBack component\n   * @returns {React.Component} - WithBack component\n   */\n  return (\n    <View style={styles.container}>\n      <TouchableOpacity style={styles.backContainer} onPress={goTo}>\n        <Icon name=\"ios-arrow-back\" size={38} color=\"white\" />\n      </TouchableOpacity>\n      <View style={styles.logoContainer}>\n        <Image\n          source={require('./cci_logo.png')}\n          style={styles.logo}\n          resizeMode=\"contain\"\n        />\n      </View>\n    </View>\n  );\n};\n\n/**\n * Styles of WithBack component\n */\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#003466',\n    paddingBottom: 30,\n    ...ifIphoneX(\n      {\n        paddingTop: 60\n      },\n      {\n        paddingTop: 40\n      }\n    )\n  },\n  logo: {\n    width: 50,\n    height: 50\n  },\n  logoContainer: {\n    alignItems: 'center',\n    marginLeft: 136\n  },\n  backContainer: { marginLeft: 30, marginTop: 8 }\n});\n\nexport default WithBack;\n",
    "static": true,
    "longname": "/Users/Jean/Desktop/ownspace-react-native/ownspaceMobile/src/shared/Header/withBack.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 116,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/shared/Header/withBack.js",
    "static": true,
    "longname": "src/shared/Header/withBack.js~styles",
    "access": "public",
    "export": false,
    "importPath": "./src/shared/Header/withBack.js",
    "importStyle": null,
    "description": "Styles of WithBack component",
    "lineNumber": 36,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 117,
    "kind": "function",
    "name": "WithBack",
    "memberof": "src/shared/Header/withBack.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/shared/Header/withBack.js~WithBack",
    "access": "public",
    "export": true,
    "importPath": "./src/shared/Header/withBack.js",
    "importStyle": "WithBack",
    "description": "The Header component with a back button",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "goTo",
        "description": "Where to go when click on the back button"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 118,
    "kind": "file",
    "name": "src/shared/Logo/index.js",
    "content": "/* eslint-disable global-require */\nimport React from 'react';\nimport { StyleSheet, Image } from 'react-native';\n\n/**\n * The Logo component\n */\nconst Logo = () => {\n  /**\n   * Render the Logo component\n   * @returns {React.Component} - Logo component\n   */\n  return (\n    <Image\n      source={require('./images/os_logo.png')}\n      style={styles.logo}\n      resizeMode=\"contain\"\n    />\n  );\n};\n\n/**\n * Styles of Logo component\n */\nconst styles = StyleSheet.create({\n  logo: {\n    alignSelf: 'center',\n    marginLeft: -10,\n    resizeMode: 'contain',\n    width: 100,\n    height: 100\n  }\n});\nexport default Logo;\n",
    "static": true,
    "longname": "/Users/Jean/Desktop/ownspace-react-native/ownspaceMobile/src/shared/Logo/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 119,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/shared/Logo/index.js",
    "static": true,
    "longname": "src/shared/Logo/index.js~styles",
    "access": "public",
    "export": false,
    "importPath": "./src/shared/Logo/index.js",
    "importStyle": null,
    "description": "Styles of Logo component",
    "lineNumber": 25,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 120,
    "kind": "function",
    "name": "Logo",
    "memberof": "src/shared/Logo/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/shared/Logo/index.js~Logo",
    "access": "public",
    "export": true,
    "importPath": "./src/shared/Logo/index.js",
    "importStyle": "Logo",
    "description": "The Logo component",
    "lineNumber": 8,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 121,
    "kind": "file",
    "name": "src/shared/ProgressBar/index.js",
    "content": "import React from 'react';\nimport { StyleSheet, View, Animated } from 'react-native';\nimport Text from '@shared/ClientText';\nimport i18n from '@i18n/i18n';\n\nclass Animations extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      animation: new Animated.Value(0)\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const { animation } = this.state;\n    const progressInterpolate = animation.interpolate({\n      inputRange: [0, 1],\n      outputRange: ['0%', '100%'],\n      extrapolate: 'clamp'\n    });\n\n    const colorInterpolate = animation.interpolate({\n      inputRange: [0, 1],\n      outputRange: ['rgba(0, 52, 102, 1)', 'rgba(227, 0, 67, 1)']\n    });\n\n    const progressStyle = {\n      width: progressInterpolate,\n      bottom: 0,\n      backgroundColor: colorInterpolate\n    };\n\n    return (\n      <View style={styles.container}>\n        <View style={styles.progressBar}>\n          <View style={StyleSheet.absoluteFill}>\n            <Animated.View style={[styles.progress, progressStyle]} />\n          </View>\n          <Text style={styles.progressText}>\n            {i18n.t('progressBar.createFile')}\n          </Text>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center'\n  },\n  progressBar: {\n    paddingLeft: 35,\n    paddingVertical: 10,\n    backgroundColor: '#E30043',\n    overflow: 'hidden'\n  },\n  progressText: {\n    color: 'white',\n    backgroundColor: 'transparent'\n  },\n  progress: {\n    position: 'absolute',\n    top: 0,\n    left: 0\n  }\n});\n\nexport default Animations;\n",
    "static": true,
    "longname": "/Users/Jean/Desktop/ownspace-react-native/ownspaceMobile/src/shared/ProgressBar/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 122,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/shared/ProgressBar/index.js",
    "static": true,
    "longname": "src/shared/ProgressBar/index.js~styles",
    "access": "public",
    "export": false,
    "importPath": "./src/shared/ProgressBar/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 123,
    "kind": "class",
    "name": "Animations",
    "memberof": "src/shared/ProgressBar/index.js",
    "static": true,
    "longname": "src/shared/ProgressBar/index.js~Animations",
    "access": "public",
    "export": true,
    "importPath": "./src/shared/ProgressBar/index.js",
    "importStyle": "Animations",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 124,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/shared/ProgressBar/index.js~Animations",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/shared/ProgressBar/index.js~Animations#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "__docId__": 125,
    "kind": "member",
    "name": "state",
    "memberof": "src/shared/ProgressBar/index.js~Animations",
    "static": false,
    "longname": "src/shared/ProgressBar/index.js~Animations#state",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "{\"animation\": *}"
      ]
    }
  },
  {
    "__docId__": 126,
    "kind": "method",
    "name": "componentDidMount",
    "memberof": "src/shared/ProgressBar/index.js~Animations",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/shared/ProgressBar/index.js~Animations#componentDidMount",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 127,
    "kind": "method",
    "name": "render",
    "memberof": "src/shared/ProgressBar/index.js~Animations",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/shared/ProgressBar/index.js~Animations#render",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 128,
    "kind": "file",
    "name": "src/shared/Text/index.js",
    "content": "import React from 'react';\n\nimport { Text, StyleSheet } from 'react-native';\nimport { useFonts } from '@use-expo/font';\n\n/**\n * The custom OwnSpace's Text component\n * @param {object} style - Style of the Text component\n * @param {string} ellipsizeMode - Defines how text will be truncated\n * @param {boolean} selectable - Lets the user select text, to use the native copy and paste functionality\n * @param {string} children - The string of the Text component\n */\nconst TextHelvetica = props => {\n  useFonts({\n    // eslint-disable-next-line global-require\n    HelveticaNeue: require('../../../assets/fonts/HelveticaNeue.ttf')\n  });\n\n  const { style, ellipsizeMode, selectable, children } = props;\n\n  /**\n   * Render the TextHelvetica component\n   * @returns {React.Component} - TextHelvetica component\n   */\n  return (\n    <Text\n      style={[style, styles.fontStyle]}\n      ellipsizeMode={ellipsizeMode}\n      selectable={selectable}\n    >\n      {children}\n    </Text>\n  );\n};\n\n/**\n * Styles of TextHelvetica component\n */\nconst styles = StyleSheet.create({\n  fontStyle: { fontFamily: 'HelveticaNeue' }\n});\n\nexport default TextHelvetica;\n",
    "static": true,
    "longname": "/Users/Jean/Desktop/ownspace-react-native/ownspaceMobile/src/shared/Text/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 129,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/shared/Text/index.js",
    "static": true,
    "longname": "src/shared/Text/index.js~styles",
    "access": "public",
    "export": false,
    "importPath": "./src/shared/Text/index.js",
    "importStyle": null,
    "description": "Styles of TextHelvetica component",
    "lineNumber": 39,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 130,
    "kind": "function",
    "name": "TextHelvetica",
    "memberof": "src/shared/Text/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/shared/Text/index.js~TextHelvetica",
    "access": "public",
    "export": true,
    "importPath": "./src/shared/Text/index.js",
    "importStyle": "TextHelvetica",
    "description": "The custom OwnSpace's Text component",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "style",
        "description": "Style of the Text component"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "ellipsizeMode",
        "description": "Defines how text will be truncated"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "selectable",
        "description": "Lets the user select text, to use the native copy and paste functionality"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "children",
        "description": "The string of the Text component"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 131,
    "kind": "file",
    "name": "src/utils/mimetype.js",
    "content": "/**\n * Object that contains all the mimeType extensions\n */\nconst mimeType = {\n  extensions: [\n    {\n      // Powerpoint\n      keyWords: [\n        'odp',\n        'application/vnd.ms-powerpoint',\n        'application/vnd.openxmlformats-officedocument.presentationml.presentation'\n      ],\n      className: 'sprite-keynote'\n    },\n    {\n      // Word\n      keyWords: ['msword', 'vnd.ms-office', 'doc'],\n      className: 'sprite-word'\n    },\n    {\n      // Zip\n      keyWords: ['zip', 'x-gzip'],\n      className: 'sprite-zip'\n    },\n    {\n      // Spreadsheet\n      keyWords: [\n        'spreadsheet',\n        'ods',\n        'vnd.ms-excel',\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n      ],\n      className: 'sprite-xls'\n    },\n    {\n      // PDF\n      keyWords: ['application/pdf'],\n      className: 'sprite-pdf'\n    },\n    {\n      // Image\n      keyWords: ['image/jpeg', 'image/png'],\n      className: 'sprite-image'\n    },\n    {\n      // Video\n      keyWords: ['application/video'],\n      className: 'sprite-video'\n    }\n  ],\n\n  /**\n        Set default icon for a File using its mimeType property\n        @file: File object\n      * */\n  setIcon(file) {\n    let isFound = false;\n    let spriteName = '';\n    // Loop over each extension\n    mimeType.extensions.map(ext => {\n      // Check for its keywords if it maches\n      return ext.keyWords.map(key => {\n        if (file.type === key) {\n          isFound = true;\n          spriteName = ext.className;\n          return spriteName;\n        }\n        return null;\n      });\n    });\n    if (!isFound) {\n      return 'sprite-brut';\n    }\n    return spriteName;\n  }\n};\n\nexport default mimeType;\n",
    "static": true,
    "longname": "/Users/Jean/Desktop/ownspace-react-native/ownspaceMobile/src/utils/mimetype.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 132,
    "kind": "variable",
    "name": "mimeType",
    "memberof": "src/utils/mimetype.js",
    "static": true,
    "longname": "src/utils/mimetype.js~mimeType",
    "access": "public",
    "export": true,
    "importPath": "./src/utils/mimetype.js",
    "importStyle": "mimeType",
    "description": "Object that contains all the mimeType extensions",
    "lineNumber": 4,
    "type": {
      "types": [
        "{\"extensions\": *, \"setIcon\": function}"
      ]
    }
  },
  {
    "__docId__": 133,
    "kind": "file",
    "name": "src/utils/showToast.js",
    "content": "import Toast from 'react-native-root-toast';\n\n/**\n * Show a toast message\n * @param {string} content - The message to display\n * @param {boolean} long - True for long else short\n */\nconst showToast = (content, long) => {\n  if (long) {\n    Toast.show(content, {\n      duration: Toast.durations.LONG,\n      position: Toast.positions.TOP + 30,\n      shadow: false,\n      opacity: 1\n    });\n  } else {\n    Toast.show(content, {\n      duration: Toast.durations.SHORT,\n      position: Toast.positions.TOP + 30,\n      shadow: false,\n      opacity: 1\n    });\n  }\n};\n\nexport default showToast;\n",
    "static": true,
    "longname": "/Users/Jean/Desktop/ownspace-react-native/ownspaceMobile/src/utils/showToast.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 134,
    "kind": "function",
    "name": "showToast",
    "memberof": "src/utils/showToast.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/showToast.js~showToast",
    "access": "public",
    "export": true,
    "importPath": "./src/utils/showToast.js",
    "importStyle": "showToast",
    "description": "Show a toast message",
    "lineNumber": 8,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "content",
        "description": "The message to display"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "long",
        "description": "True for long else short"
      }
    ],
    "return": null
  },
  {
    "kind": "index",
    "content": "# OwnSpace ⛅️\n📁 Repository for the OwnSpace mobile application in React Native.\n\nProject developed for the 2019/2020 DSMC course, during my licence in the training center CCI Campus Colmar.\n\n💻 Made by [Jean-Thavorak Phe](https://jtphe.ddns.net)\n",
    "longname": "/Users/Jean/Desktop/ownspace-react-native/ownspaceMobile/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"main\": \"node_modules/expo/AppEntry.js\",\n  \"scripts\": {\n    \"start\": \"expo start\",\n    \"android\": \"expo start --android\",\n    \"ios\": \"expo start --ios\",\n    \"web\": \"expo start --web\",\n    \"eject\": \"expo eject\"\n  },\n  \"dependencies\": {\n    \"@aws-amplify/api\": \"^2.1.6\",\n    \"@aws-amplify/pubsub\": \"^3.0.7\",\n    \"@react-native-community/eslint-config\": \"^1.0.0\",\n    \"@react-native-community/masked-view\": \"0.1.10\",\n    \"@react-native-community/netinfo\": \"^5.6.2\",\n    \"@react-navigation/native\": \"^5.1.7\",\n    \"@use-expo/font\": \"^2.0.0\",\n    \"aws-amplify\": \"^2.2.6\",\n    \"aws-amplify-react-native\": \"^3.2.2\",\n    \"esdoc\": \"^1.1.0\",\n    \"esdoc-ecmascript-proposal-plugin\": \"^1.0.0\",\n    \"esdoc-jsx-plugin\": \"^1.0.0\",\n    \"esdoc-react-plugin\": \"^1.0.1\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"expo\": \"~36.0.0\",\n    \"expo-localization\": \"~8.1.0\",\n    \"i18n-js\": \"^3.5.1\",\n    \"immutability-helper\": \"^3.0.2\",\n    \"qrcode.react\": \"^1.0.0\",\n    \"react\": \"~16.13.1\",\n    \"react-dom\": \"~16.9.0\",\n    \"react-i18next\": \"^11.3.3\",\n    \"react-native\": \"https://github.com/expo/react-native/archive/sdk-36.0.0.tar.gz\",\n    \"react-native-gesture-handler\": \"~1.6.1\",\n    \"react-native-iphone-x-helper\": \"^1.2.1\",\n    \"react-native-paper\": \"^3.8.0\",\n    \"react-native-popup-menu\": \"^0.15.7\",\n    \"react-native-reanimated\": \"~1.4.0\",\n    \"react-native-root-toast\": \"^3.2.0\",\n    \"react-native-router-flux\": \"^4.2.0\",\n    \"react-native-safe-area-context\": \"0.6.0\",\n    \"react-native-screens\": \"2.0.0-alpha.12\",\n    \"react-native-vector-icons\": \"^6.6.0\",\n    \"react-redux\": \"^7.2.0\",\n    \"redux\": \"^4.0.5\",\n    \"redux-persist\": \"^6.0.0\",\n    \"redux-persist-expo-filesystem\": \"^2.0.0\",\n    \"redux-saga\": \"^1.1.3\",\n    \"reselect\": \"^4.0.0\"\n  },\n  \"devDependencies\": {\n    \"@babel/core\": \"^7.0.0\",\n    \"babel-preset-expo\": \"~8.1.0\",\n    \"eslint\": \"^6.8.0\",\n    \"eslint-config-airbnb\": \"^18.1.0\",\n    \"eslint-config-node\": \"^4.0.0\",\n    \"eslint-config-prettier\": \"^6.11.0\",\n    \"eslint-plugin-import\": \"^2.20.2\",\n    \"eslint-plugin-jsx-a11y\": \"^6.2.3\",\n    \"eslint-plugin-node\": \"^11.0.0\",\n    \"eslint-plugin-prettier\": \"^3.1.3\",\n    \"eslint-plugin-react\": \"^7.19.0\",\n    \"eslint-plugin-react-hooks\": \"^2.5.1\",\n    \"prettier\": \"^1.19.1\",\n    \"reactotron-react-native\": \"^5.0.0\",\n    \"reactotron-redux\": \"^3.1.3\"\n  },\n  \"private\": true\n}\n",
    "longname": "/Users/Jean/Desktop/ownspace-react-native/ownspaceMobile/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]